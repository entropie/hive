#!/usr/bin/env ruby
# -*- mode:ruby -*-

require File.join(File.dirname(File.expand_path(__FILE__)), "..", "lib", "hive.rb")

include Hive
include Subcommands

Hives = Queen::hives.load

options = { }

global_options do |opts|
  opts.banner = "Usage: hive [options] [subcommand [options]]"
  opts.description = "The Hive."
  opts.separator ""
  opts.separator "Global options are:"

  opts.on("-l", "--list", "List all the beehives") do
    Hives.each do |ident, hive|
      p hive
    end
  end

end

add_help_option

command(:create) do |sopts|
  sopts.banner = "Usage hive create [options]"
  sopts.description = "create a new beehive and make the bees swarm"
  sopts.separator ""

  sopts.on("-n", "--name BEEHIVE", "name of beehive") do |beehive|
    newbeehive = Hive::Beehive.create(beehive)
    if newbeehive.create!(ENV["DOMAIN"])
      puts "done and valid!"
      puts "make sure to edit #{File.join(newbeehive.path, 'config', 'beehive.rb')}"
    end
  end
end

Hives.each do |ident, beehive|
  command(ident) do |sopts|
    sopts.description = "options for beehive #{ident}"
    sopts.banner = "Usage:"
    sopts.on("-l", "--list") do |b|
      puts "Files for #{ident} in #{beehive.path}"
      puts
      puts beehive.list
    end

    sopts.on("-M", "--minify") do
      beehive.assets.read
      beehive.set_enviroment
      BeehiveAssets.make_static_js
    end

    sopts.on("-C", "--check-migration") do 
      beehive.assets.read
      beehive.set_enviroment
      Sequel.extension :migration
      Sequel::Migrator.check_current(DB, beehive.app_root("migration"))
    end

    sopts.on("-m", "--migrate [FROM,TO]") do |fromto|
      from, to = fromto.split(",").map{ |a| a.to_i }
      beehive.assets.read
      beehive.set_enviroment
      Sequel.extension :migration

      Sequel::Migrator.run(DB, beehive.app_root("migration"), :current => from, :target => to)
    end
  end
end


cmd = opt_parse

